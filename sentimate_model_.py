# -*- coding: utf-8 -*-
"""Sentimate Model .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18RtV03iBGAMOSUDlDCTIeB2kjB3jtOVe

# **Sentimate Model Analysis**

## Name : Gaikwad Pawan Ramesh

## **Import Necessary Libraries**
"""

import numpy as np  
import pandas as pd
import tensorflow as tf
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.utils import shuffle

"""## **Read and Load the Dataset**"""

DATASET_COLUMNS=['target','ids','date','flag','user','text']
DATASET_ENCODING = "ISO-8859-1"
dataset = pd.read_csv('training.1600000.processed.noemoticon.csv',encoding=DATASET_ENCODING,names=DATASET_COLUMNS, skiprows=795000, nrows = 10000)

"""## **Exploratory Data Analysis On Dataset**

**Five top records of data**
"""

dataset.head()

"""**Five last records of data**"""

dataset.tail()

"""**Total Number of Columns in Dataset**"""

dataset.columns

"""**Shape of data**"""

dataset.shape

dataset['target'].dtype

"""**detail of dataset in max,std,count**"""

dataset.describe()

"""**Data information**"""

dataset.info()

dataset['target'].value_counts()

"""**Checking for missing values**"""

dataset.isnull().sum()

"""# **Data Preprocessing**

**Selecting the text and Target column for our further analysis**
"""

data=dataset[['text','target']]

"""**Print unique values of target**"""

data['target'].unique()

dataset['user'].unique()

"""**Replacing the values to ease understanding. (Assigning 1 to Positive sentiment 4)**"""

dataset['target'] = dataset['target'].replace(4,1)

"""**Print unique values of target**"""

data['target'].unique()

"""**Target class is balanced after subsetting the data**"""

dataset['target'].value_counts()

"""**Applying the Preprocess Function on the subset data**"""

dataset['text'] = dataset['text'].apply(lambda x: preprocess(x))

"""# **Data Visualization of Target Variables**"""

import seaborn as sns
sns.countplot(x='target', data=dataset)

dataset.plot(kind = 'bar')

dataset.hist(bins=np.arange(0, 5, 0.5)-0.25)
plt.grid(False)
plt.show()

users = dataset['user'].value_counts()[:10]
users.plot(kind='bar', color='red')



plt.rcParams['figure.figsize'] = (5,5)
sns.countplot(dataset["target"],hue = dataset["target"],palette = 'dark')
plt.legend(loc = 'upper right')
plt.show()

dataset["target"].value_counts().plot(kind = 'pie', explode = [0,0.1], figsize = (6,6), autopct = '%1.1f%%', shadow = True)

plt.ylabel("Negative and Positive")
plt.legend(["positive", "negative"])
plt.show()

"""# **Thank you so much**"""